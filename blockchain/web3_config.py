# blockchain/web3_config.py
from web3 import Web3
from dotenv import load_dotenv
import os

# Load environment variables
load_dotenv()

# Use Alchemy as provider
ALCHEMY_URL = os.getenv("ALCHEMY_URL")
web3 = Web3(Web3.HTTPProvider(ALCHEMY_URL))


def check_connection():
    """Ensure web3 is connected to the blockchain."""
    if not web3.is_connected():
        raise ConnectionError("‚ùå Not connected to Polygon Mainnet ‚Äî check your RPC URL and network status")
    return True


# Confirm connection on startup
if web3.is_connected():
    print("‚úÖ Connected to Polygon Mainnet via Alchemy")
    print(f"‚ÑπÔ∏è Node Info: {web3.client_version}")
    print(f"‚õìÔ∏è Latest Block: {web3.eth.block_number}")
else:
    print("‚ùå Failed to connect to Polygon Mainnet")

# Wallet balance check
wallet_address = os.getenv("WA")
if web3.is_address(wallet_address):
    balance = web3.eth.get_balance(wallet_address)
    print("üí∞ Wallet Balance (MATIC):", web3.from_wei(balance, 'ether'))
else:
    print("‚ö†Ô∏è Invalid wallet address in .env file")
